build_image: phpdocker/phpdocker:7.0
language: none

env:
  global:
    - TESTING=true

before_install:
  # Run daemons
  - service mysql start

  # Check environment
  - php -v
  - mysql -V
  - composer -V

install:
  # Database
  - mysql -e 'create database test;'

  # Composer
  - composer install --no-interaction --prefer-dist

  # Bower
  - bower install --allow-root --config.interactive=false

before_script:
  # Prepare Shippable directories
  - mkdir -p shippable/codecoverage
  - mkdir -p shippable/testresults

  # Set file/directory permissions
  - chmod -R 777 log
  - chmod -R 777 storage
  - chmod -R 777 temp

  - chmod -R 777 tests/log
  - chmod -R 777 tests/temp

  # Set config file for Shippable
  - cp tests/config.shippable.neon app/config/config.local.neon
  - cp tests/config.shippable.neon tests/config.local.neon

script:
  # Run PHP CodeSniffer
  - vendor/bin/phpcs --standard=vendor/etten/codestyle/Etten/ruleset.xml -nsp app migrations src tests

  # Run PHPUnit
  - vendor/bin/phpunit --log-junit shippable/testresults/junit.xml --coverage-xml shippable/codecoverage tests

  # Run Migrations
  - php -f tests/index.php migrations:reset

after_success:
  # Deploy it
  - if [ "$BRANCH" == "staging" ]; then php -f web/index.php deployment:staging -n; fi
  - if [ "$BRANCH" == "production" ]; then php -f web/index.php deployment:production -n; fi

  # Check HTTP status
  - if [ "$BRANCH" == "staging" ]; then URL="https://www.example.com" check-status-code ; fi
  - if [ "$BRANCH" == "production" ]; then URL="https://www.example.com" check-status-code ; fi
